'use strict';

const fs = require('fs');
const pathUsers = './db/users.json';

let writeNewUser = (user, callback) => {
    readJson(pathUsers, (data) => {
        data.push(user);
        writeJson(pathUsers, data, callback);
    });
}

let getUsers = (callback) => {
    readJson(pathUsers, (arr) => {
        callback(arr);
    });
}

let createDb = (username) => {
    writeJson(`./db/${username}.json`, [], () => {});
}

let getTiles = (secUser, callback) => {
    readJson('./db/' + secUser.username + '.json', (arr) => {
        callback(arr);
    });
}

let saveTile = (secUser, data, index, callback) => {
    let address = `./db/${secUser.username}.json`;

    readJson(address, (arr) => {
        arr[index] = data;
        writeJson(address, arr, () => {
            callback();
        });
    });
}

let addTile = (tile, secUser, callback) => {
    let address = `./db/${secUser.username}.json`;
    readJson(address, (data) => {
        data.push(tile);

        writeJson(address, data, () => {
            callback();
        });
    });
}

let removeTile = (secUser, index, callback) => {
    let address = `./db/${secUser.username}.json`;
    readJson(address, (arr) => {
        arr.splice(index, 1);
        writeJson(address, arr, () => {
            callback();
        });
    });
}

//Внутренние функции
let readJson = (path, callback) => {
    fs.readFile(path, (err, data) => {
        var arr = [];

        if (err) {
            console.log(`Ошибка при чтении файла по пути ${path}`);

            if (err.code == 'ENOENT') {
                console.log('Вроде бы мы такой файл не нашли.');
            }
        } else {
            arr = JSON.parse(data);
        }

        callback(arr);
    });
}

let writeJson = (path, data, callback) => {
    fs.writeFile(path, JSON.stringify(data, '', 4), (err) => {
        if (err) {
            console.log(err);
            return;
        }

        callback();
    });
}

//Exports
exports.writeNewUser = writeNewUser;
exports.getUsers = getUsers;
exports.createDb = createDb;
exports.getTiles = getTiles;
exports.saveTile = saveTile;
exports.addTile = addTile;
exports.removeTile = removeTile;
