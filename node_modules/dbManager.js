'use strict';

const fs = require('fs');
const path = require('path');
const url = require('url');

const pathUsers = path.join(__dirname, '../db/users.json');


let writeNewUser = (user, callback) => {
    readJson(pathUsers, (data) => {
        data.push(user);
        writeJson(pathUsers, data, callback);
    });
}

let getUsers = (callback) => {
    readJson(pathUsers, (arr) => {
        callback(arr);
    });
}

let createDb = (username) => {
    let pathUser = getPathUser(username);
    writeJson(pathUser, [], () => {});
}

let getTiles = (secUser, callback) => {
    let pathUser = getPathUser(secUser.username);
    readJson(pathUser, (arr) => {
        callback(arr);
    });
}

let saveTile = (secUser, data, index, callback) => {
    let pathUser = getPathUser(secUser.username);

    readJson(pathUser, (arr) => {
        arr[index] = data;
        writeJson(pathUser, arr, () => {
            callback();
        });
    });
}

let addTile = (tile, secUser, callback) => {
    let pathUser = getPathUser(secUser.username);
    readJson(pathUser, (data) => {
        data.push(tile);

        writeJson(pathUser, data, () => {
            callback();
        });
    });
}

let removeTile = (secUser, index) => {
    let pathUser = getPathUser(secUser.username);
    readJson(pathUser, (arr) => {
        arr.splice(index, 1);
        writeJson(pathUser, arr, () => {});
    });
}

//Внутренние функции
let readJson = (path, callback) => {
    fs.readFile(path, (err, data) => {
        var arr = [];

        if (err) {
            console.log(`Error by reading ${path}`);

            if (err.code == 'ENOENT') {
                console.log('File dont find.');
                callback(arr);
            }
        } else {
            console.log('Take: ', data);

            try {
                arr = JSON.parse(data);
                callback(arr);
            } catch (err) {
                readJson(path, callback);
            }
        }

    });
}

let writeJson = (path, data, callback) => {
    fs.writeFile(path, JSON.stringify(data, '', 4), (err) => {
        if (err) {
            console.log(err);
            return;
        }

        callback();
    });
}

let getPathUser = (username) => {
    return path.join(__dirname, '../db/' + username + '.json');
}

//Exports
exports.writeNewUser = writeNewUser;
exports.getUsers = getUsers;
exports.createDb = createDb;
exports.getTiles = getTiles;
exports.saveTile = saveTile;
exports.addTile = addTile;
exports.removeTile = removeTile;
