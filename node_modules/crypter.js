'use strict';

const crypto = require('crypto');
const fs = require('fs');

let secUser = {};

let encryptUserData = (user, callback) => {
    var crName = encrypt(user.username, user.password);
    var crPass = encrypt(user.password, user.username);

    secUser = {
        username: crName,
        password: user.password
    };

    callback(crName, crPass);
}

let getSecUser = () => {
    return secUser;
}

let encryptTile = (tile) => {
    for (let key in tile) {
        tile[key] = encrypt(tile[key], secUser.password);
    }

    return tile;
}

let decryptTiles = (arr) => {
    arr.forEach((tile) => {
        for (let key in tile) {
            tile[key] = decrypt(tile[key], secUser.password);
        }
    });

    return arr;
}

// Внутренние функции
let encrypt = (string, clue) => {
    const cipher = crypto.createCipher('aes192', clue);
    var encrypted = cipher.update(string, 'utf8', 'hex');
    encrypted += cipher.final('hex');

    return encrypted;
}

let decrypt = (string, clue) => {
    const decipher = crypto.createDecipher('aes192', clue);
    var decrypted = decipher.update(string, 'hex', 'utf8');
    decrypted += decipher.final('utf8');

    return decrypted;
}

// Экспорты
exports.encrypt = encrypt;
exports.decrypt = decrypt;
exports.encryptUserData = encryptUserData;
exports.secUser = getSecUser;
exports.encryptTile = encryptTile;
exports.decryptTiles = decryptTiles;
